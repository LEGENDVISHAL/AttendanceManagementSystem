package classes;

import java.sql.ResultSet;
import java.util.ArrayList;

import backend.*;

public class Subject {
	private String table = "SUBJECTS";
	private int id;

	public int teacherId;
	public int divisionId;
	public String department;
	public String name;
	
	// protected subjects;
	
	public Subject(int id, int teacherId, int divisionId, String name, String dept) {
		this.id = id;
		this.teacherId = teacherId;
		this.divisionId = divisionId;
		this.name = name;
		this.department = dept;
	}
	

	public static boolean createTable(Database db) {
		String[] conditions = {
				"ID			INT		PRIMARY KEY		GENERATED BY DEFAULT AS IDENTITY",
			"TEACHERID		INT						NOT NULL",
			"DIVISIONID		INT						NOT NULL",
				"NAME		TEXT					NOT NULL",
				"DEPT		TEXT					NOT NULL",
		};
		db.createTable("SUBJECTS", conditions);
		return true;
	}
	public static boolean dropTable(Database db) {
		db.dropTable("SUBJECTS");
		return true;
	}
	
	public static void insert(Database db, int teacherId, int divisionId, String name, String dept) {
		String schema = "TEACHERID, DIVISIONID, NAME, DEPT";
		String values = String.format("%d, %d, '%s', '%s'", teacherId, divisionId, name, dept);
		
		try {
			db.insertRow("SUBJECTS", schema, values);
		} catch (Exception e) {
			System.out.println("SUBJECT Error while inserting SUBJECT " + name);
			e.printStackTrace();
		}
	}
	public void update(Database db) {
		String conditions[] = {
               	String.format("TEACHERID=%d", this.teacherId),
               	String.format("DIVISIONID=%d", this.divisionId),
               	String.format("NAME='%s'", this.name),
               	String.format("DEPT='%s'", this.department),
		};
		
		String id = String.format("ID=%d", this.id);
		
		try {
			db.updateRow(this.table, conditions, id);
		} catch (Exception e) {
			System.out.println("SUBJECT Error while updating SUBJECT " + this.id);
			e.printStackTrace();
		}
	}
	
	public static Subject getById(Database db, int id) {		
		String[] conditions = {
				String.format("ID = %d", id),
		};
		
		try {			
			ResultSet rs = db.getRows("SUBJECTS", conditions);
			while (rs.next()) {
				int teacherId = rs.getInt("TEACHERID");
				int divisionId = rs.getInt("DIVISIONID");
				String name = rs.getString("NAME");
				String dept = rs.getString("DEPT");
				
				return new Subject(id, teacherId, divisionId, name, dept); 
			}
		} catch (Exception e) {
			System.out.println("SUBJECT Error while getting SUBJECT by id");
			e.printStackTrace();
		}
		
		return null;
	}
		
	public int getId() {
		return this.id;
	}
	
	public void getInfo() {
		System.out.println("Subject " + this.id);
		System.out.println("  Teacher ID: " + this.teacherId);
		System.out.println("  Division ID: " + this.divisionId);
 		System.out.println("  Name: " + this.name);
 		System.out.println("  Department: " + this.department);
	}
 	
 	public static void printSubjects(Database db) {
		try {
			ResultSet rs = db.getRows("SUBJECTS");
			System.out.println("-----------------------------------------------------");
			System.out.println("ID \tTEACHERID \tDIVISIONID \tNAME \tDEPT");
			System.out.println("-----------------------------------------------------");
			while (rs.next()) {
				int id = rs.getInt("ID");
				int teacherId = rs.getInt("TEACHERID");
				int divisionId = rs.getInt("DIVISIONID");
				String name = rs.getString("NAME");
				String dept = rs.getString("DEPT");
				
				System.out.println(String.format("%d \t%d \t\t%d \t\t%s \t%s", id, teacherId, divisionId, name, dept));
			}
			System.out.println("-----------------------------------------------------");
		} catch (Exception e) {
			System.out.println("SUBJECT Error while printing SUBJECT");
			e.printStackTrace();
		}
	}
 	
 	public static ArrayList<Subject> getDivisionSubjects(Database db, int divisionId) {
 		ArrayList<Subject> subjects = new ArrayList<Subject>();
 		
 		String condition[] = {"DIVISIONID = " + divisionId};
 		ResultSet rs = db.getRows("SUBJECTS", condition);
 		
 		try {
	 		while (rs.next()) {
	 			int id = rs.getInt("ID");
	 			int teacherId = rs.getInt("TEACHERID");
	 			String name = rs.getString("NAME");
	 			String dept = rs.getString("DEPT");
	 			Subject s = new Subject(id, teacherId, divisionId, name, dept);
	 			subjects.add(s);
	 		}
	 	} catch (Exception e) {
			System.out.println("SUBJECT Error while getting SUBJECT by division");
			e.printStackTrace();
		}
 		return subjects;
 	}
 	public static ArrayList<Subject> getTeacherSubjects(Database db, int teacherId) {
 		ArrayList<Subject> subjects = new ArrayList<Subject>();
 		
 		String condition[] = {"TEACHERID = " + teacherId};
 		ResultSet rs = db.getRows("SUBJECTS", condition);
 		
 		try {
	 		while (rs.next()) {
	 			int id = rs.getInt("ID");
	 			int divisionId = rs.getInt("DIVISIONID");
	 			String name = rs.getString("NAME");
	 			String dept = rs.getString("DEPT");
	 			Subject s = new Subject(id, teacherId, divisionId, name, dept);
	 			subjects.add(s);
	 		}
	 	} catch (Exception e) {
			System.out.println("SUBJECT Error while getting SUBJECT by teacher");
			e.printStackTrace();
		}
 		return subjects;
 	}
 	
 	public static ArrayList<Subject> getDepartmentSubjects(Database db, String dept) {
 		ArrayList<Subject> subjects = new ArrayList<Subject>();
 		
 		String condition[] = {"DEPT = '" + dept + "'"};
 		ResultSet rs = db.getRows("SUBJECTS", condition);
 		
 		try {
	 		while (rs.next()) {
	 			int id = rs.getInt("ID");
	 			int teacherId = rs.getInt("TEACHERID");
	 			int divisionId = rs.getInt("DIVISIONID");
	 			String name = rs.getString("NAME");
	 			Subject s = new Subject(id, teacherId, divisionId, name, dept);
	 			subjects.add(s);
	 		}
	 	} catch (Exception e) {
			System.out.println("SUBJECT Error while getting SUBJECT by department");
			e.printStackTrace();
		}
 		return subjects;
 	}
}