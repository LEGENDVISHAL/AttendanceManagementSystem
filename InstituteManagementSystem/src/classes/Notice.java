package classes;

import java.sql.*;
import java.util.ArrayList;

import backend.*;

public class Notice {
	private String table = "NOTICES";
	private int id;
	public String title;
	public String content;
	public Date publishDate;
	
	public Notice(int id, String title, String content, Date publish) {
		this.id = id;
		this.title = title;
		this.content = content;
		this.publishDate = publish;
	}
	
	public static boolean createTable(Database db) {
		String[] conditions = {
				"ID			INT		PRIMARY KEY		GENERATED BY DEFAULT AS IDENTITY",
				"TITLE		TEXT					NOT NULL",
				"CONTENT	TEXT					NOT NULL",
				"PUBLISH	DATE					NOT NULL",
		};
		db.createTable("NOTICES", conditions);
		return true;
	}
	
	public static boolean dropTable(Database db) {
		db.dropTable("NOTICES");
		return true;
	}

	public void getInfo() {
		System.out.println("  ID: " + this.id);
		System.out.println("  TITLE: " + this.title);
		System.out.println("  CONTENT: " + this.content);
		System.out.print("  PUBLISHED: " + this.publishDate);
	}
	
	public static void insert(Database db, String title, String content, int year, int month, int date) {
		String schema = "TITLE, CONTENT, PUBLISH";
		String values = String.format("'%s', '%s', '%04d-%02d-%02d'", title, content, year, month, date);
		
		try {
			db.insertRow("NOTICES", schema, values);
		} catch (Exception e) {
			System.out.println("NOTICE Error while inserting NOTICE " + content);
			e.printStackTrace();
		}
	}
	
	public void update(Database db) {
		String conditions[] = {
				String.format("TITLE='%s'", this.title),
               	String.format("CONTENT='%s'", this.content),
               	String.format("PUBLISH='%s'", this.publishDate.toString()),
		};
		
		String id = String.format("ID=%d", this.id);
		
		try {
			db.updateRow(this.table, conditions, id);
		} catch (Exception e) {
			System.out.println("NOTICE Error while updating NOTICE " + this.content);
			e.printStackTrace();
		}
	}
	
	public void delete(Database db) {		
		String id = String.format("ID=%d", this.id);
		
		try {
			db.deleteRow(this.table, id);
		} catch (Exception e) {
			System.out.println("NOTICE Error while deleting NOTICE " + this.content);
			e.printStackTrace();
		}
	}
	
	public static Notice getById(Database db, int id) {
		String[] conditions = {
				String.format("ID = %d", id)
		};
		
		try {
			ResultSet rs = db.getRows("NOTICS", conditions);
			if (rs != null) {
				while (rs.next()) {
					String title = rs.getString("TITLE");
					String content = rs.getString("CONTENT");
					Date publish = rs.getDate("PUBLISH");
					
					return new Notice(id, title, content, publish); 
				}
			}
			
		} catch (Exception e) {
			System.out.println("NOTICE Error while getting NOTICE by id");
			e.printStackTrace();
		}
		
		return null;
	}
	
	public int getId() {
		return this.id;
	}

	public static void printNotices(Database db) {
		String sort[] = {
				"PUBLISH"
		};
		String sortDir = "DESC";
		try {
			ResultSet rs = db.getRows("NOTICES", sort, sortDir);
			System.out.println("------------------------------------");
			System.out.println("ID \tTITLE \t\tPUBLISHED");
			System.out.println("------------------------------------");
			while (rs.next()) {
				int id = rs.getInt("ID");
				String title = rs.getString("TITLE");
				String content = rs.getString("CONTENT");
				Date publish = rs.getDate("PUBLISH");

				System.out.println(String.format("%d \t%s \t%s \n\n%s\n\n", id, title, publish.toString(), content));
			}
			System.out.println("------------------------------------");
		} catch (Exception e) {
			System.out.println("NOTICE Error while printing NOTICES");
			e.printStackTrace();
		}
	}
	
	public static ArrayList<Notice> getNotices(Database db) {
		ArrayList<Notice> notices = new ArrayList<Notice>();
		
		String sort[] = {
				"PUBLISH"
		};
		String sortDir = "DESC";
		try {
			ResultSet rs = db.getRows("NOTICES", sort, sortDir);
			while (rs.next()) {
				int id = rs.getInt("ID");
				String title = rs.getString("TITLE");
				String content = rs.getString("CONTENT");
				Date publish = rs.getDate("PUBLISH");
				notices.add(new Notice(id, title, content, publish));
			}
		} catch (Exception e) {
			System.out.println("NOTICE Error while getting NOTICES");
			e.printStackTrace();
		}
		return notices;
	}
}